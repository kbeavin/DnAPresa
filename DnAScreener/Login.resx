<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAZEMAAAEACACEIgAAFgAAACgAAABkAAAAhgAAAAEACAAAAAAALBoAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAA////ABIW/wDs6/0A///6AP///AD///4A/v79APv8/gD5+v0A+fr+APf4/AD19v0A8fL5AOfo
        +wDr7P0A6+z7AOzt+wB6ffUAgIP1AICD8wCusPgAtrj1ALW38QC7vfcAvsD2AMvM9QDQ0fkA1db6ANPU
        9wDa2/0A19j5AN3e/QDX2PYA4eL8AN/g+gDk5f0AAAD+AAAC+wABBv8AAQT/AAEE/QACBf8AAgb8AAIF
        +gADB/8AAwf9AAQI/wAECP4ABAj9AAUK/wAFCf8ABgv9AAYJ+gAHC/8ACAz/AAgL/gAIDP4ACAz6AAkO
        /wAJDv0ACQ39AAkN+gAKDf8ACg7/AAoO/AALEP8ACw/9AAsP+wALD/oADBD/AAwQ/QAMD/YADRH/AA4S
        /wAOEv4ADhH9AA4S+gAPFP8ADxP/AA8T/QAPEvcAEBT/ABAT/QAQFP0ADxLvABEV+QASFf8AEhb9ABIW
        +wASF/UAExf+ABQY/gAUGP0AFBf5ABUZ/AAUF+8AFhr+ABYZ/QAWGvoAFhn3ABca/AAXG/oAGBz9ABgc
        +gAZHf8AGR39ABkd+QAZHfcAGh78ABoe+QAbHvsAGx/4ABwg/AAcIPsAHiH+AB4i+QAdIfYAIiX6ACEl
        9AAjJ/gAJSj6ACUn9AAmKfQAJyv5ACcq9gAnKvQAJinzACou+gAsL/YALzL6AC0w8AAyNfkAMjb0ADU4
        +AA3OvYAOj35ADs+9gA+QfgAPD/vAEJF+ABER/sAQ0b1AEdK/ABHSvcASkz0AExO+ABOUfcAUFP6AFBS
        9QBPUfIAUlT3AFNW+ABTVvMAVln6AFRX8wBWWfcAWlz4AFte9QBeYfcAYWT4AGJl9ABnavsAZWf2AGpt
        /ABpa/cAZWjvAGpt9QBsbvcAbG/0AGtt8gBvcfcAbnHyAHN1+ABucOsAcnTzAHZ4+QB3efYAeHr3AHp8
        +AB8fvcAeXvwAH+B9wB9f/QAcXPbAIKE+QB7feoAgoT2AIOF9QCGiPkAhYb3AISG8wCJivYAjI34AIuN
        9ACQkvkAjpD1AJCS9gCUlvcAk5X1AJGS8gCSlPAAmZr4AJeZ9gCVlvIAnJ72AJ+h9QCjpPgAoqPzAKip
        +ACmp/MArK34ALGy+ACtrvIAuLn8ALW2+QCxsvMAuLn4ALy9+gC/wPgAwsP6AL6/9ADDw/YAx8j5AMrL
        +QDHyPYAzc75AM/P9wDT0/kA2dn6ANzc+QDe3vkA4eH6AN/f9QDp6f4A5eX6AOnp+gDu7v0A8PD9AO/v
        +wDz8/4A9fX+APPz/AD19f0A9/f+APf3/QD29vwA9fX7APn5/gD5+f0A+/v+APj4+wD7+/0A/f3+APz8
        /QD///8AAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBCeLKu7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7
        u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7E8vfCwYBAQEGGIlFXnd7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7e3t7e3t7e3t7e3t7e3t7e3dePoLUBgEGzTWIzRfdGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZ
        GRkZGRkZGRkZGBgZGRkZGRgYGRkZGRkYGBkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRne
        4RWNLL4F3DWgGqFzZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ3J5cWVnZ2dyeXFl
        Z2cCZoFfXGdnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZYDF96Um0ZV844QtSk9PT09PT09P
        T09PT09PT09PT09PT09PT09PT09PT09PT09PSU/NF4w4T0lY0tiHO087gNDYxW1JT09PT09PT09PT09P
        T09PT09PT09PT09PT09PT09PT09GKaX7iIo1srsnAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAlJfFo5XVwJPbReEAldXUNCjX5KATwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AkpYI8M1K7SrLQICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJSX9iEQgICTm3YdkoC
        Tm3Ybyg2XAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJSSxvKLImK0kxJAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICUmIWhkYCAk9tF3lKAldAEtCfx4ZJAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICL4TvlIEVJhLCci82NjY2NjIzMzMvMzMzMzMzMzMzMzMzMzMzMzMz
        MzMzMzMzMy82lV8tMzMvPZVMLTMxLS2dwZAnLzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzY2NjYy
        MoYawSbGBrEmn8yvqqysrKyvEhISEqmpqampqampqampqampqampqampqampqampqaGnqampqamhqamp
        rriuoaGjqampqampqampqampqampqampqampqampqampq6+srKysqcLdrSae+QEHzWQCip6fn5+erMzM
        yNL+BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEBAUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQQhoZ6fn56JTV7FCQEBAQEWgTc7NzcyKTQpKCde6AEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAdyfdCgpKDY5
        nc3mBgEBAQEBBut8SQJPdsDfz4Y3S9cBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBASNsLS+dF69LOasFAQEBAQEBAQEHkzcCN5cFAQEh
        eCjEAQEBAQEBAQEBAQEBAQEBAQEBAQEBBgEBBgEBAQEGAQEGBgEBAQEBAQEBAQEBAQEGAQEBAQEBAQEB
        AQEBAQEBAQEGAQHZSzaQ9wH8kDZBFQEBAQEBAQEBBZk3AjeXBQEBBrAlrQUdzb/MHQcBAQEBAQEBAffe
        y7/H3hEG/efp6enp5v3+G8u/yx8FAQEB6yHp6ekh5wEBECHp6ekh7wEBBRAWxL/LG/4BzjRH2QEBBrMt
        MpgFAQEBAQEBAQWbNgI3lwUBAQHUMo6eWEiOhU2R4AEBAQEBB86EOUiOgUd5nOGvY2hoXp7jkExRjnVN
        qPMBAcx+Y2tmd7UHAdR3Y2tjg94B8hN5MXWRd0SM5solh/cBAQG8K0l87gEBAQEBAQEFmTcCN5cFAQEB
        63Q/Mk3RBQmfJXAWAQEBCa00J4LfBcMnQFYZBZIzNooFwCVt2gYcdiWrBgEBGFRGNsoGAQEBzzxCUNkB
        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
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAfiKQEaC8QHANgIttgYBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEB3F5ANqsFAQH5kieICwEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQHugElJgCTUckk7XhsBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQbTay1MreDenTQlnAYBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEijSkn
        LTFaNSg6fc4GAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAeKVXys+Oi5qn+YBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB6LS7vr6+trnA0g4BAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBB+XTzs4V5wUBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEGBgYGBgYGAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>